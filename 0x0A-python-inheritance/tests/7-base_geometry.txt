Test module for 7-base_geometry

Importing class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Checking for module docstring:
         >>> m = __import__("7-base_geometry").__doc__
         >>> len(m) > 1
         True


Checking for method docstring:
	  >>> mod1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
	  >>> len(mod1) > 1
	  True
	  >>> mod2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
          >>> len(mod2) > 1
          True


Checking for class docstring:
         >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
         >>> len(c) > 1
         True


>>> bg = BaseGeometry()
>>> try:
...     bg.area(5, 5)
... except TypeError as e:
...     assert str(e) == "area() takes 1 positional argument but 3 were given"
... else:
...     raise AssertionError("Expected TypeError was not raised")


Passing one argument to area method
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

>>> bg = BaseGeometry()
>>> try:
...     bg.area(5, 5)
... except TypeError as e:
...     assert str(e) == "area() takes 1 positional argument but 3 were given"
... else:
...     raise AssertionError("Expected TypeError was not raised")

>>> bg = BaseGeometry()
>>> try:
...     bg.area()
... except Exception as e:
...     assert str(e) == "area() is not implemented"
... else:
...     raise AssertionError("Expected Exception was not raised")


Trying:
    b.integer_validator("integer", 1)
Expecting nothing


Trying to pass a non-integer argument
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


Trying to pass a negative value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


Integer_validator with no arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


Passing one argument to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'


Passing tuple to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Passing None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


Passing dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
